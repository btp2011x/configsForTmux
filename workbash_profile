source ~/.bashrc # aliases kept in ~/.bashrc

## Role assumeption ##

export AWS_DEV_TOKEN="INYOKQ47OQBTKPMNDSE5EMSVG57AMLBYSMZD3XFRDXZUYRBQEZOZPNBCICKTYEJO"
export AWS_PROD_TOKEN="E63TTCJ5SRTEPXHD63WQPWWCJJDDIHMGUKDJQS2T6QNKRWLNS7ODOWAZJ7LKG6ER"

function ec2metadatadev {
    curl -X POST -d "profile=dev&profile_mfa=$(oathtool --totp -b $AWS_DEV_TOKEN)&profile_mfa_time=86400" http://169.254.169.254/profile
}
function ec2metadataprod {
    curl -X POST -d "profile=prod&profile_mfa=$(oathtool --totp -b $AWS_PROD_TOKEN)&profile_mfa_time=86400" http://169.254.169.254/profile
}
function ec2AssumeRole {
    curl -X POST -d "role=$1&duration=3600&serial=arn:aws:iam::056684691971:mfa/btpeterson@spscommerce.com&autorefresh=on" http://169.254.169.254/authenticate
    unsetcreds
    awsrole
}
function unsetprofile {
    curl -X POST -d "role=Unset Profile" http://169.254.169.254/profile
    awsrole
}

function devrole {
	ec2metadatadev
	ec2AssumeRole arn:aws:iam::056684691971:role/admin/credstash/commerce-translator/dev/dev-commerce-translator-credsta-CredstashAdminRole-14ZJAUOHBLMD8
}
function prodrole {
	ec2metadataprod
	ec2AssumeRole arn:aws:iam::104966627370:role/admin/credstash/commerce-translator/prod/prod-commerce-translator-credst-CredstashAdminRole-9YFMKVFQHLBM
}
function t2role {
	ec2metadatadev
	ec2AssumeRole arn:aws:iam::056684691971:role/admin/resources/transformation-team-access-T2Role-AGGYUOSQFQBE
}
function arole {
	ec2metadatadev
	ec2AssumeRole arn:aws:iam::056684691971:role/app/dev-ct-outbound-data-analysis-AppInstanceRole-1F7V3V9A7BCD4
}
function grole {
	ec2metadatadev
	ec2AssumeRole arn:aws:iam::056684691971:role/app/dev-ct-outbound-data-gatherer-AppInstanceRole-1S3SGEZLEMI55
}

## some utility functions ##

function d2f {
	oathtool --totp -b $AWS_DEV_TOKEN | pbcopy
}
function p2f {
	oathtool --totp -b $AWS_PROD_TOKEN | pbcopy
}
function awsdev {
    awsenv=dev
    setawsenv
    awsrole
}
function awsprod {
    awsenv=prod
    setawsenv
    awsrole
}
function setawsenv {
    export AWS_ACCESS_KEY_ID=$(aws configure get ${awsenv}.aws_access_key_id)
    export AWS_SECRET_ACCESS_KEY=$(aws configure get ${awsenv}.aws_secret_access_key)
    export AWS_DEFAULT_REGION=us-east-1
    #PS1=(aws${awsenv})${PS1}
    echo "AWS env to ${awsenv}"
}

function a { 
	echo -----------------------------------------------------------------------------------------------
	alias
}
function la {
	ls -A
}

function vimrc {
	vi ~/.vimrc
}

function bashrc { 
	vi ~/.bashrc 

}
function bashp {
	vi ~/.bash_profile
}
function srcbash {
	printf '\nsourcing .bash_profile and .bashrc...\n\n'
	source ~/.bash_profile
}
function backupbash {
	cp ~/.bash_profile ~/backup
	cp ~/.bashrc ~/backup
	printf '\nbash configurations have been backed up to ~/backup...\n\n' 
}
function restorebash {
	cp ~/backup/.bash_profile ~
	cp ~/backup/.bashrc ~
	printf '\nbash configurations have been restored by the backup...\n\n'
}

function importconfigs {
	echo pulling configs from github...
	git -C ~/github/configsForTmux/ pull 
	cp ~/github/configsForTmux/.tmuxinator/default.yml ~/.tmuxinator/default.yml
	cp ~/github/configsForTmux/.tmux.conf ~/.tmux.conf
	cp ~/github/configsForTmux/.vimrc ~/.vimrc
	echo 'configs have been imported...'
}
function exportconfigs {
	cp ~/.tmuxinator/default.yml ~/github/configsForTmux/.tmuxinator/default.yml
        cp ~/.tmux.conf  ~/github/configsForTmux/.tmux.conf
        cp ~/.vimrc ~/github/configsForTmux/.vimrc
	cp ~/.bashrc ~/github/configsForTmux/workbashrc
	cp ~/.bash_profile ~/github/configsForTmux/workbash_profile
        cd ~/github/configsForTmux
       	git add .
	gcm "foo"
	git push	
	echo 'configs have been exported...'
	cd
}

function javae () {
	JAVA='.java'
	CLASS='.class'
	javac $1$JAVA
	java  $1
	rm $1$CLASS
}
function findjdkhome {
	/usr/libexec/java_home
}

function restore {
	cd ~/github/ct-outbound-testing && cp analysisMake data-analysis/Makefile &&
	cp gatheringMake data-gathering/Makefile && 
	cp properties data-analysis/conf/majortest.properties && 
	cp properties data-gathering/conf/majortest.properties
}

# Set up some useful bash functions
if [ -r $HOME/functions.sh ]; then
	  source $HOME/functions.sh
  fi


###############################
## set some environment vars ##

# enable colors
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced
# change user icon, add git branch
parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
export PS1="\[\033[32m\]\w\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "

# set env
export EDITOR='vim'

export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home
export PATH=$PATH:$JAVA_HOME/bin/

export SCALA_HOME=/usr/local/share/scala
export PATH=$PATH:$SCALA_HOME/bin

export JUNIT_HOME=/Library/JUNIT
export CLASSPATH=$CLASSPATH:$JUNIT_HOME/junit4.10.jar:.

 #OPAM configuration
. /Users/btpeterson/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

# export Mockito_HOME=/Library/Mockito
# export CLASSPATH=$CLASSPATH:$Mockito_HOME/mockito-all-2.0.2-beta.jar:.
